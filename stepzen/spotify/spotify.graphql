type Track {
    name: String
    popularity: Int
    artist: String
}

type Image {
    url: String
}

type Query {
    tracks: [Track]
    @rest(
        setters: [
            {field:"name",path:"track.name"}
            {field:"popularity",path:"track.popularity"}
            {field:"artist",path:"track.album.artists[0].name"}
        ]
        resultroot: "tracks.items[]"
        endpoint: "https://api.spotify.com/v1/playlists/$playlistid"
        configuration: "spotify_config"
    )
    images: [Image]
    @rest(
        setters: [
            {field:"url",path:"url"}
            ]
        resultroot: "tracks.items[].track.album.images[1]"
        endpoint: "https://api.spotify.com/v1/playlists/$playlistid"
        configuration: "spotify_config"
    )
}

type Playlist {
    id: String
    name: String!
    tracks: [Track]
        @materializer (query: "tracks")
    images: [Image]
        @materializer (query: "images")
}

type Query {
    playlistById: Playlist
        @rest(
            endpoint: "https://api.spotify.com/v1/playlists/$playlistid"
            configuration: "spotify_config"
        )
}