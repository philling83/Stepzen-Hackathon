type Track {
    name: String
    popularity: Int
    artist: String
}

type Image {
    url: String
}

# type Playlist {
#     id: String
#     name: String!
#     tracks: [Track]
#         @materializer (query: "tracks")
#     images: [Image]
#         @materializer (query: "images")
# }

type Auth {
    access_token: String!
    token_type: String
    expires_in: Float
}

type Mutation {
    get_auth: Auth
        @rest(
            method: POST
            contenttype: "application/x-www-form-urlencoded"
            postbody: "grant_type=client_credentials"
            endpoint: "https://accounts.spotify.com/api/token"
            configuration: "spotify_auth_config"
        )

    """
    returns tracks via a sequence that generates a 
    new token and then queries the data with the new 
    $access_token provided
    """
    tracks_with_key: Track
        @sequence(
            steps: [
                { mutation: "get_auth" }
                { query: "tracks" }
            ]
        )
}

# type Query {
#     get_auth: Auth
#         @rest(
#             method: POST
#             contenttype: "application/x-www-form-urlencoded"
#             postbody: "grant_type=client_credentials"
#             endpoint: "https://accounts.spotify.com/api/token"
#             configuration: "spotify_auth_config"
#         )
# }

type Query {
    tracks(access_token: String!): [Track]
    @rest(
        setters: [
            {field:"name",path:"track.name"}
            {field:"popularity",path:"track.popularity"}
            {field:"artist",path:"track.album.artists[0].name"}
        ]
        resultroot: "tracks.items[]"
        endpoint: "https://api.spotify.com/v1/playlists/$playlistid"
        headers: [{ name: "Authorization", value: "Bearer $access_token" }]
        configuration: "spotify_config"
    )
    images(access_token: String!): [Image]
    @rest(
        setters: [
            {field:"url",path:"url"}
            ]
        resultroot: "tracks.items[].track.album.images[1]"
        endpoint: "https://api.spotify.com/v1/playlists/$playlistid"
        headers: [{ name: "Authorization", value: "Bearer $access_token" }]
        configuration: "spotify_config"
    )
}

# type Query {
#     playlistById(access_token: String!): Playlist
#         @rest(
#             endpoint: "https://api.spotify.com/v1/playlists/$playlistid"
#             headers: [{ name: "Authorization", value: "Bearer $access_token" }]
#             configuration: "spotify_config"
#         )
# }